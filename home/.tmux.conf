# -----------------------------------------------------------------------------
# Change prefix shortcut to C-a from C-b
# -----------------------------------------------------------------------------
set-option -g prefix C-a

# -----------------------------------------------------------------------------
# Set color when using tmux
# -----------------------------------------------------------------------------
# Try one of these if you have issues.
set-option -g default-terminal "screen-256color"
# set -g default-terminal "tmux-256color"
# set -g default-terminal "xterm-256color"

# -----------------------------------------------------------------------------
# Compatibility with neovim
# -----------------------------------------------------------------------------
# set-option -sa terminal-overrides ',xterm-256color:RGB'
set-option -g focus-events on
set-option -g terminal-features ',xterm-256color:RGB'

# -----------------------------------------------------------------------------
# Use vi mode for selection
# -----------------------------------------------------------------------------
set-option -g mode-keys vi

# -----------------------------------------------------------------------------
# Enable mouse to resize panes
# -----------------------------------------------------------------------------
set-option -g mouse on

if-shell "uname | grep -q Darwin" "source-file $HOME/.config/tmux/os/mac.tmux" "source-file $HOME/.config/tmux/os/linux.tmux"

# -----------------------------------------------------------------------------
# Status line
# -----------------------------------------------------------------------------
set -g status-left-length 100
set -g status-right-length 100

# source-file "$HOME/.config/tmux/themes/papercolor-light.tmux"
# source-file "$HOME/.local/share/base16/tinted-tmux/colors/base16-solarized-dark.conf"

# -----------------------------------------------------------------------------
# Open new panes/windows with current path
# -----------------------------------------------------------------------------
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# -----------------------------------------------------------------------------
# Fix escape delay in neovim
# -----------------------------------------------------------------------------
set -sg escape-time 0

# -----------------------------------------------------------------------------
# Increase scrollback limit
# -----------------------------------------------------------------------------
set-option -g history-limit 10000 # default is 2000

# -----------------------------------------------------------------------------
# Disable "mouse release exits copy mode"
# Taken from https://github.com/tmux/tmux/issues/140#issuecomment-474341833
# -----------------------------------------------------------------------------
# disable "release mouse drag to copy and exit copy-mode", ref: https://github.com/tmux/tmux/issues/140
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
# let single click do selection clearing for us.
bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection

# this line changes the default binding of MouseDrag1Pane, the only difference
# is that we use `copy-mode -eM` instead of `copy-mode -M`, so that WheelDownPane
# can trigger copy-mode to exit when copy-mode is entered by MouseDrag1Pane
bind-key -n MouseDrag1Pane if-shell -F -t = '#{mouse_any_flag}' "if -Ft= '#{pane_in_mode}' 'copy-mode -eM' 'send-keys -M' " "copy-mode -eM"

# -----------------------------------------------------------------------------
# Undercurl
# -----------------------------------------------------------------------------
# set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# -----------------------------------------------------------------------------
# Navigation
# -----------------------------------------------------------------------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
#
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# vim-like navigation
bind-key -n C-w if-shell "$is_vim" "send-keys C-w" "switch-client -Ttable1"
bind-key -Ttable1 'h' select-pane -L
bind-key -r -Ttable1 'C-h' resize-pane -L
bind-key -Ttable1 'j' select-pane -D
bind-key -r -Ttable1 'C-j' resize-pane -D
bind-key -Ttable1 'k' select-pane -U
bind-key -r -Ttable1 'C-k' resize-pane -U
bind-key -Ttable1 'l' select-pane -R
bind-key -r -Ttable1 'C-l' resize-pane -R
bind-key -Ttable1 '\' select-pane -l
bind-key -Ttable1 's' split-window -v
bind-key -Ttable1 'v' split-window -h
bind-key -Ttable1 'C-w' send-keys C-w

# -----------------------------------------------------------------------------
# Other useful hotkeys
# -----------------------------------------------------------------------------
bind -r g run-shell "tmux neww ~/bin/tmux-sessioniser.sh repo"
bind -r f run-shell "tmux neww ~/bin/tmux-sessioniser.sh session"
